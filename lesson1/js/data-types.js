"use strict";
// use strict- строгий режим, включен по умолчанию в файлах с классами и модулями
// однострочный комментарий ctrl + /
/*
многострочный комментарий ctrl + shift + /
*/
/* переменные
обьявление (создание) переменных
let / const / var
область видимости переменных, обьявленных через let / const
 - блок {}
 область видимости переменных, обьявленных через var
- функция
*/
let loginInput; // обьявили переменную
/* имена переменных должны быть сущ, должны отражать данные, которые
в них будут хранится (camelCase)
active-item так нельзя
login_item
присвоили переменную с именем userLogin
присвоили значение "qwerty"
*/
let userLogin = "qwerty";
userLogin = "asd"; // переопределили значение перменной
// присвоили переменную с именем userAge
// присвоили значение 26
let userAge = 26; // тип данных в переменной определяется в момент когда мы присваиваем значение
// обьявили несколько переменных
let pointA, pointB;
// обьявили несколько переменных
// и присвоили значения
let min = 3, max = 10;

// отладка
console.log(userLogin);
console.log(min, max);

/* обьявление перменных через конст
 1. необходимо присвоить значение в момент обьявления
 2. значение константы изменить нельзя
 */
 // если на момент выполнения скрипта значения константы известны
 // то название принято писать в верхнем регистре
const MONDAY_RU = "Понедельник";
const YELLOW = "#ffff00";
const MIN_LEN = 20;
// если значение не известно то camelCase
const averageAge = (23 + 12) / 2;

// ошибка, повторное присвоение переменной
//let min = 1;

/*
типы данных
1. string - строки (набор символов от открывающей ковычки до закрывающей)
1.1 в двойных ковычках или в одинарных
*/
let text = "в js не существует разницы в кавычках"
text = "отображение \"кавычек\" как часть текста"
console.log(text);

// 1.2 в обратных ковычках
text = `Имя пользователя ${userLogin}, возраст ${userAge}.
        4 + 5 = ${ 4 + 5}`
console.log(text);

// 2. number - числа (целые числа, числа с плавующей точкой)
let fontSize = 12;
let minTemp = -10.5;

// 2.2 Infinity / -Infinity
let inf = fontSize / 0;
console.log(inf);

// 2.3 Nan - not a number - говорит об ошибке или невозможности вычесления
let nan = text / fontSize
console.log(nan);

// 3. BIGINT - для чисел произвольной длины
// n на конце указывает на тип данных BIGINT
let time = 12355666767763423n;

// 4. BOOLEAN - логический тип, принимает только 2 знвчения true / false
let isActive = true;
let checked = false;

// 5. NULL - ссылка на несуществующий обьект / значение неизвестно
let name = null;

// 6. UNDEFINED - переменной не было присвоено значение
let regForm;
